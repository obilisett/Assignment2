// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: constant/group_member_role.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
private struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
    struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
    typealias Version = _2
}

public enum GroupMemberRole: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case owner // = 0
    case manager // = 1
    case member // = 2
    case guest // = 3
    case anonymousGuest // = 4
    case UNRECOGNIZED(Int)

    public init() {
        self = .owner
    }

    public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .owner
        case 1: self = .manager
        case 2: self = .member
        case 3: self = .guest
        case 4: self = .anonymousGuest
        default: self = .UNRECOGNIZED(rawValue)
        }
    }

    public var rawValue: Int {
        switch self {
        case .owner: return 0
        case .manager: return 1
        case .member: return 2
        case .guest: return 3
        case .anonymousGuest: return 4
        case let .UNRECOGNIZED(i): return i
        }
    }
}

#if swift(>=4.2)

    extension GroupMemberRole: CaseIterable {
        // The compiler won't synthesize support with the UNRECOGNIZED case.
        public static var allCases: [GroupMemberRole] = [
            .owner,
            .manager,
            .member,
            .guest,
            .anonymousGuest,
        ]
    }

#endif // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
    extension GroupMemberRole: @unchecked Sendable {}
#endif // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension GroupMemberRole: SwiftProtobuf._ProtoNameProviding {
    public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
        0: .same(proto: "OWNER"),
        1: .same(proto: "MANAGER"),
        2: .same(proto: "MEMBER"),
        3: .same(proto: "GUEST"),
        4: .same(proto: "ANONYMOUS_GUEST"),
    ]
}
