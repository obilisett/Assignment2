// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: constant/storage_resource_type.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
private struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
    struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
    typealias Version = _2
}

public enum StorageResourceType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case userProfilePicture // = 0
    case groupProfilePicture // = 1
    case messageAttachment // = 2
    case UNRECOGNIZED(Int)

    public init() {
        self = .userProfilePicture
    }

    public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .userProfilePicture
        case 1: self = .groupProfilePicture
        case 2: self = .messageAttachment
        default: self = .UNRECOGNIZED(rawValue)
        }
    }

    public var rawValue: Int {
        switch self {
        case .userProfilePicture: return 0
        case .groupProfilePicture: return 1
        case .messageAttachment: return 2
        case let .UNRECOGNIZED(i): return i
        }
    }
}

#if swift(>=4.2)

    extension StorageResourceType: CaseIterable {
        // The compiler won't synthesize support with the UNRECOGNIZED case.
        public static var allCases: [StorageResourceType] = [
            .userProfilePicture,
            .groupProfilePicture,
            .messageAttachment,
        ]
    }

#endif // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
    extension StorageResourceType: @unchecked Sendable {}
#endif // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension StorageResourceType: SwiftProtobuf._ProtoNameProviding {
    public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
        0: .same(proto: "USER_PROFILE_PICTURE"),
        1: .same(proto: "GROUP_PROFILE_PICTURE"),
        2: .same(proto: "MESSAGE_ATTACHMENT"),
    ]
}
