---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC: Legacy public and private subnets in two availability zones, a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parameters'
      Parameters:
      - AZA
      - AZB
      - CidrBlock
      - CidrBlockIPv6
      - VPC
      - InternetGateway
      - SubnetAPublic
      - RouteTableAPublic
      - SubnetBPublic
      - RouteTableBPublic
      - SubnetAPrivate
      - RouteTableAPrivate
      - SubnetBPrivate
      - RouteTableBPrivate
Parameters:
  AZA:
    Description: 'AZ of A'
    Type: 'AWS::EC2::AvailabilityZone::Name'
  AZB:
    Description: 'AZ of B'
    Type: 'AWS::EC2::AvailabilityZone::Name'
  CidrBlock:
    Description: 'The set of IP addresses for the VPC (e.g., 10.0.0.0/16).'
    Type: String
  CidrBlockIPv6:
    Description: 'The set of IPv6 addresses for the VPC (e.g., 2600:1f18:277f:e700::/56).'
    Type: String
  VPC:
    Description: 'VPC'
    Type: 'AWS::EC2::VPC::Id'
  InternetGateway:
    Description: 'Internet Gateway id.'
    Type: String
  SubnetAPublic:
    Description: 'Subnet A public.'
    Type: 'AWS::EC2::Subnet::Id'
  RouteTableAPublic:
    Description: 'Route table A public.'
    Type: String
  SubnetBPublic:
    Description: 'Subnet B public.'
    Type: 'AWS::EC2::Subnet::Id'
  RouteTableBPublic:
    Description: 'Route table B public.'
    Type: String
  SubnetAPrivate:
    Description: 'Subnet A private.'
    Type: 'AWS::EC2::Subnet::Id'
  RouteTableAPrivate:
    Description: 'Route table A private.'
    Type: String
  SubnetBPrivate:
    Description: 'Subnet B private.'
    Type: 'AWS::EC2::Subnet::Id'
  RouteTableBPrivate:
    Description: 'Route table B private.'
    Type: String
Conditions:
  HasNot: !Equals ['true', 'false']
Resources:
  NullResource:
    Type: 'Custom::NullResource'
    Condition: HasNot
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'vpc/vpc-2azs-legacy'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  AZs: # Better name would be NumberOfAZs, but we keep the name for backward compatibility
    Description: 'Number of AZs'
    Value: 2
    Export:
      Name: !Sub '${AWS::StackName}-AZs'
  AZList:  # Better name would be AZs, but the name was already used
    Description: 'List of AZs'
    Value: !Join [',', [!Ref AZA, !Ref AZB]]
    Export:
      Name: !Sub '${AWS::StackName}-AZList'
  AZA:
    Description: 'AZ of A'
    Value: !Ref AZA
    Export:
      Name: !Sub '${AWS::StackName}-AZA'
  AZB:
    Description: 'AZ of B'
    Value: !Ref AZB
    Export:
      Name: !Sub '${AWS::StackName}-AZB'
  CidrBlock:
    Description: 'The set of IP addresses for the VPC.'
    Value: !Ref CidrBlock
    Export:
      Name: !Sub '${AWS::StackName}-CidrBlock'
  CidrBlockIPv6:
    Description: 'The set of IPv6 addresses for the VPC.'
    Value: !Ref CidrBlockIPv6
    Export:
      Name: !Sub '${AWS::StackName}-CidrBlockIPv6'
  VPC:
    Description: 'VPC.'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  InternetGateway:
    Description: 'InternetGateway.'
    Value: !Ref InternetGateway
    Export:
      Name: !Sub '${AWS::StackName}-InternetGateway'
  SubnetsPublic:
    Description: 'Subnets public.'
    Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets private.'
    Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPrivate'
  RouteTablesPrivate:
    Description: 'Route tables private.'
    Value: !Join [',', [!Ref RouteTableAPrivate, !Ref RouteTableBPrivate]]
    Export:
      Name: !Sub '${AWS::StackName}-RouteTablesPrivate'
  RouteTablesPublic:
    Description: 'Route tables public.'
    Value: !Join [',', [!Ref RouteTableAPublic, !Ref RouteTableBPublic]]
    Export:
      Name: !Sub '${AWS::StackName}-RouteTablesPublic'
  SubnetAPublic:
    Description: 'Subnet A public.'
    Value: !Ref SubnetAPublic
    Export:
      Name: !Sub '${AWS::StackName}-SubnetAPublic'
  RouteTableAPublic:
    Description: 'Route table A public.'
    Value: !Ref RouteTableAPublic
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableAPublic'
  SubnetAPrivate:
    Description: 'Subnet A private.'
    Value: !Ref SubnetAPrivate
    Export:
      Name: !Sub '${AWS::StackName}-SubnetAPrivate'
  RouteTableAPrivate:
    Description: 'Route table A private.'
    Value: !Ref RouteTableAPrivate
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableAPrivate'
  SubnetBPublic:
    Description: 'Subnet B public.'
    Value: !Ref SubnetBPublic
    Export:
      Name: !Sub '${AWS::StackName}-SubnetBPublic'
  RouteTableBPublic:
    Description: 'Route table B public.'
    Value: !Ref RouteTableBPublic
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableBPublic'
  SubnetBPrivate:
    Description: 'Subnet B private.'
    Value: !Ref SubnetBPrivate
    Export:
      Name: !Sub '${AWS::StackName}-SubnetBPrivate'
  RouteTableBPrivate:
    Description: 'Route table B private.'
    Value: !Ref RouteTableBPrivate
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableBPrivate'
